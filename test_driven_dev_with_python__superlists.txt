winxp
=====
Git-1.8.4-preview20130916.exe already installed
--------------------------------------------------------------------------------
WARNING: git 1.8.5.2 BROKEN
git push -u origin master FAILS WITH fatal: could not read Username for 'https://github.com': No such file or directory
SEE https://teamtreehouse.com/forum/pushing-to-a-remote-github-repository-git-error-for-windows-users-found-during-ruby-track-build-a-social-networ
--------------------------------------------------------------------------------

download and install python-3.4.0.msi

vezerlopult/rendszer/specialis/kornyezeti valtozok
  hunkis
    PATH ...;c:\python34;c:\python34\scripts

git bash
  $ python
  Python 3.4.0... (PATH change works)
  $ pip
  Usage:...
  $ vi .bashrc
  alias python3='c:\\Python34\\python.exe'
  alias pip-3.4='c:\\Python34\\Scripts\\pip.exe'
  
restart git bash
  $ python3
  Python 3.4.0... (PATH change works)

  $ pip-3.4 install django==1.6.1
  $ pip-3.4 install --upgrade selenium

================================================================================
1 - getting django set up using a functional test
================================================================================
create test

  $ cd "/d/documents and settings/hunkis/agco/dev/_misc/python/test_driven_dev_with_python"
  $ vi 01_01_functional_tests.py
  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
  from selenium import webdriver
  browser = webdriver.Chrome()
  browser.get('http://localhost:8000')
  assert 'Django' in browser.title
  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

run it - fails

  $ python3 01_01_functional_tests.py
  ...
  ChromeDriver executable needs to be available in the path.
  Please download from http://chromedriver.storage.googleapis.com/index.html
  and read up at http://code.google.com/p/selenium/wiki/ChromeDriver

  download chromedriver_win32.zip from
    http://chromedriver.storage.googleapis.com/index.html?path=2.9/
  unzip and copy chromedriver.exe to c:\python34
    (not the proper place but is on PATH)

  $ python3 01_01_functional_tests.py
  ...opens chrome but
  ...assertion error

create project and start up django

  $ django-admin.py startproject superlists
  $ ls -R superlists
  (shell 1)$ cd superlists
  (shell 1)$ python3 manage.py runserver

run it again - succeeds
  
  (shell 2)$ cd "/d/documents and settings/hunkis/agco/dev/_misc/python/test_driven_dev_with_python/superlists"
{ (shell 2)$ mv ../01_01_functional_tests.py .   <=== !!! }
  (shell 2)$ python3 01_01_functional_tests.py
  ...lots of messages
  ...but no assertion error

commit changes to local git repo

  (FROM NOW ON THE DEFAULT DIR IS /d/documents and settings/hunkis/agco/dev/_misc/python/test_driven_dev_with_python/superlists)
{ $ mv ../test_driven_dev_with_python.txt . }
{ $ mv test_driven_dev_with_python.txt test_driven_dev_with_python__superlists.txt }

  $ git init .
  $ git add .
  $ git status
  ...
  $ git rm -r --cached superlists/__pycache__
  $ echo "__pycache__" >>.gitignore
  $ echo "*.pyc" >>.gitignore
  $ git add .gitignore
  $ git status
  ...
  $ git commit
  ...opens vi
  ...into the first line insert
  first commit - first ft and basic django setup
  
create github repo

  sign up on github as janos-kiss
  https://github.com
    sign in
    janos-kiss/create repo
      owner: janos-kiss
      repo name: test_driven_dev_with_python__superlists
      (x) public
      create repo

push local repo to github

  $ git remote add origin https://github.com/janos-kiss/test_driven_dev_with_python__superlists.git
  $ git push -u origin master
  Username for 'https://github.com': janos-kiss
  Password for 'https://janos-kiss@github.com':
  Counting objects: 11, done.
  ...

================================================================================
2 - extending our functional test using the unittest module
================================================================================
create test case with unittest and run it
 
  $ vi 02_01_functional_tests.py
  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
  from selenium import webdriver
  import unittest

  class NewVisitorTest(unittest.TestCase):
  
    def setUp(self):
      self.browser = webdriver.Chrome()
      self.browser.implicitly_wait(3)
      
    def tearDown(self):
      self.browser.quit()
      
    def test_can_start_a_list_and_retrieve_it_later(self):
      # Edith has heard about a cool new online to-do app. She goes
      # to check out its homepage
      self.browser.get('http://localhost:8000')

      # She notices the page title and header mention to-do lists
      self.assertIn('To-Do', self.browser.title) #
      self.fail('Finish the test!') #

      # She is invited to enter a to-do item straight away
      # ...rest of comments
      
  if __name__ == '__main__':
  unittest.main(warnings='ignore')
  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

  (shell 1)$ python3 manage.py runserver
  (shell 1)$ python3 02_01_functional_tests.py

commit to local repo and push to github

  $ git add 02_01_functional_tests.py
  $ git diff
  ...
  $ git status
  ...
  $ git commit -a

  $ git push -u origin master
